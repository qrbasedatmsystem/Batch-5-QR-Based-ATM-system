from imutils.video import VideoStream
from pyzbar import pyzbar
import argparse
import datetime
import imutils
import time
import cv2
import serial

arduinoData = serial.Serial('COM175', 115200)
vs = VideoStream(src=0).start()

time.sleep(0.2)
found = set()
readdat=""
def send_cash():
     arduinoData.write('Verify'.encode())
     print("Place your Enrolled Finger on the sensor ")

DaTa_r = ""
def getSeriAl():
    global DaTa_r
    if(arduinoData.in_waiting >0):
        line = arduinoData.readline()
        readdat=line.decode()
        
        print(readdat)
        if(readdat == "Ready\r\n"):
                    print("Device online")
                    found.clear()
                    print("|----------------------------------------------------------------------|")
                    print("|-------------------------Welcome to QRA-TM----------------------------|")
                    print("|-----------Please Show your QR code in front of Camera----------------|")
                    print("|----------------------------------------------------------------------|")
                    print("")
                    print("")
                    print("")

     
        if(readdat == "<<Transaction Successful>>\r\n"):
                    print("|--------------------Thank YoU for Using QR ATM------------------------|")
                    print("|----------------------------------------------------------------------|")
                    print("")

        if(readdat == "Ready to enroll a fingerprint!\r\n"):
                    print('Please Enter Id To enroll in end of #  :')
                    x = input()
                    arduinoData.write(str(x).encode())



  
while True:
    getSeriAl()
    frame = vs.read()
    frame = imutils.resize(frame, width=400)

    # find the barcodes in the frame and decode each of the barcodes
    barcodes = pyzbar.decode(frame)

    # loop over the detected barcodes
    for barcode in barcodes:
            # extract the bounding box location of the barcode and draw
            # the bounding box surrounding the barcode on the image
            (x, y, w, h) = barcode.rect
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 0, 255), 2)

            # the barcode data is a bytes object so if we want to draw it
            # on our output image we need to convert it to a string first
            barcodeData = barcode.data.decode("utf-8")
            barcodeType = barcode.type

            # draw the barcode data and barcode type on the image
            text = "{} ({})".format(barcodeData, barcodeType)

            # if the barcode text is currently not in our CSV file, write
            # the timestamp + barcode to disk and update the set
            if barcodeData not in found:
                    out=str(barcodeData).split(',')
                    
                    print("Requested Amount to Withdraw : ",out[1])
                    send_cash();
                    found.add(barcodeData)

    # show the output frame
    cv2.imshow("E-safe Shopping", frame)
    key = cv2.waitKey(1) & 0xFF

    # if the `q` key was pressed, break from the loop
    if key == ord("q"):
            break

# close the output CSV file do a bit of cleanup
print("[INFO] cleaning up...")
cv2.destroyAllWindows()
vs.stop()

